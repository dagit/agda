{-# OPTIONS -fglasgow-exts #-}

-- Generated by Alonzo

module Q where
import RTS
import qualified RTP
import qualified PreludeShow
import qualified PreludeBool
import qualified RTN
import qualified AlonzoPrelude
import qualified PreludeList
import qualified RTP
import qualified PreludeNat
import qualified PreludeString
name1 = "pred"
d1 = d1_1
  where d1_1 (RTN.C2) = cast RTN.C2
        d1_1 a = cast d1_2 a
        d1_2 (RTN.C3 v0) = cast v0
name3 = "Q"
d3 = d3_1
  where d3_1 (PreludeBool.C3) = cast RTN.d1
        d3_1 a = cast d3_2 a
        d3_2 (PreludeBool.C2) = cast PreludeBool.d1
name5 = "f"
d5 = d5_1
  where d5_1 (PreludeBool.C3)
          = cast (Q.d1 (cast (RTP._primIntToNat (3 :: Prelude.Int))))
        d5_1 a = cast d5_2 a
        d5_2 (PreludeBool.C2) = cast PreludeBool.C3
name6 = "mainS"
d6 = d6_1
  where d6_1
          = cast
              (PreludeShow.d6
                 (cast
                    (Q.d5
                       (cast
                          (AlonzoPrelude.d34 (cast PreludeBool.d1) (cast PreludeBool.d1)
                             (cast PreludeBool.C2)
                             (cast PreludeBool.C3))))))
main = putStrLn d6
