Usage

agda --compile --malonzo --malonzodir <DIR> --ghc-flag "<GHC FLAGS>" <FILE>.agda

Compiles <FILE>.agda and hereditarily imported agda files to Haskell
and to an executable.

Haskell files are written under the directory <DIR>/MAlonzo.
If --manlonzodir <DIR> is omitted, the current directory is used instead.
Agda module A.B.C translates to Haskell module MAlonzo.A.B.C
(to avoid conflicts between Agda and Haskell standard libraries.)

Those haskell files are then compiled to object files and an executable
by the command 

ghc <GHC FLAGS> -i<DIR> -main-is MAlonzo.<FILE> <DIR>/Malonzo/<FILE>.hs --make

It is assumed that <FILE>.agda contains a definition of main :: IO ().
If it does not, ghc finishes with an error, but never mind.


To do anything useful, you need to add something like
lib/System/IO.agda shown below to the library.
Then, main : IO () in <FILE>.agda translates to
main :: IO () in <FILE>.hs

module System.IO where

open import Data.Unit   using (⊤)
open import Data.String using (String)

postulate
  IO : Set -> Set

{-# BUILTIN IO	 IO #-}
{-# BUILTIN UNIT ⊤  #-}

primitive
  primPutStr	     : String -> IO ⊤
  primIOReturn	     : {a : Set} -> a -> IO a
  primIOBind	     : {a b : Set} -> IO a -> (a -> IO b) -> IO b
