------------------------------------------------------------------------
To install Agda 2, proceed as follows:

0) Install prerequisites (recent versions of GHC, Alex and Happy).

   In addition to the libraries distributed with GHC you will need the binary
   and zlib packages which can be downloaded from Hackage:

     http://hackage.haskell.org/cgi-bin/hackage-scripts/package/binary-0.3
     http://hackage.haskell.org/cgi-bin/hackage-scripts/package/zlib-0.3

   The zlib Haskell package requires the development files of the zlib
   C package to be installed (see http://zlib.net). Your package
   manager may be able to install these files for you. (For instance,
   on Debian or Ubuntu it should suffice to run
     apt-get install zlib1g-dev
   as root to get the correct files installed.)

   See Appendix for concrete scripts for Ubuntu Linux.

1) Download Agda 2, perhaps as follows:

     darcs get http://www.cs.chalmers.se/~ulfn/darcs/Agda2
     cd Agda2

2) Build and install the Agda 2 library. If you want to install it in
   the default location (you may need root privileges for this), use
   the following commands:

     runhaskell Setup.hs configure
     runhaskell Setup.hs build
     runhaskell Setup.hs install

   You can select another location for the installation of the library
   by using the following commands:

     runhaskell Setup.hs configure --prefix=<the install path>
     runhaskell Setup.hs build
     runhaskell Setup.hs install --user

   You can also give other options to the installation script, see
   runhaskell Setup.hs configure --help.

3) If you want to use the Emacs mode, build and install it (see
   below).

4) If you want to use the stand-alone "interpreter", go to the
   src/main directory, and build and install
   it:

     runhaskell Setup.hs configure
     runhaskell Setup.hs build
     runhaskell Setup.hs install

   Or:

     runhaskell Setup.hs configure --prefix=<the install path>
     runhaskell Setup.hs build
     runhaskell Setup.hs install --user

------------------------------------------------------------------------
To use the Agda 2 Emacs mode:

0. Install haskell-mode, version 2.1 or later (see
   http://haskell.org/haskell-mode/).

0.1 Add

    (add-to-list 'load-path "<The Directory Where You Downloaded haskell-mode>")

    to your .emacs file.

1. Install Agda 2. (See above.)

2. Copy the .el files in src/full/Interaction/emacs-mode to some directory
   which is listed in your Emacs load-path. You may want to
   byte-compile the files.

   Untested example installation (creates a new directory and adds it
   to your load-path, does not byte-compile the files):

   mkdir <...>/agda2-mode
   cp src/full/Interaction/emacs-mode/*.el <...>/agda2-mode
   echo "(add-to-list 'load-path \"<...>/agda2-mode/\")" >> ~/.emacs

3. Add the following to your .emacs:

   (autoload 'agda2-mode "agda2-mode" "Agda2 mode." t)
   (add-to-list 'auto-mode-alist '("\\.l?agda$" . agda2-mode))
   (modify-coding-system-alist 'file "\\.l?agda$" 'utf-8)

   If you have already set up the suffix .agda for use with some other
   mode you may need to remove or alter that setting. You are
   encouraged to use the suffix .alfa for Agda 1 files.

  Now, if you open a file named XXX.agda the buffer will use
  agda2-mode. It may take 5 or 10 seconds before you see anything in
  the buffer, but that is normal.

4. If you want to you can customise some settings. Just start Emacs
   and type the following:

   M-x load-library RET agda2-mode RET
   M-x customize-group RET agda2 RET

   This is useful if you want to change the Agda search path, in which
   case you should change the agda2-include-dirs variable.

5. If you want some specific settings for the Emacs mode you can add
   them to agda2-mode-hook. For instance, if you want to enable the
   TeX input method (for writing mathematical Unicode characters, like
   ∀≥ℕ→π⟦⟧) whenever the Emacs mode is enabled you can add the
   following to your .emacs:

   (add-hook 'agda2-mode-hook
             '(lambda nil
                (require 'quail)
                (set-input-method 'TeX)
                ))

   A side note: If you want to add your own keybindings to the TeX
   input method you can add the following to your .emacs:

   (eval-after-load "quail/latin-ltx"
     '(mapc (lambda (pair)
              (quail-defrule (car pair) (cadr pair) "TeX"))
         '(("\\comp" "∘")
           ("\\[[" "⟦") ("\\]]" "⟧")
           ; If you find it awkward to write comments using the TeX input
           ; method the following bindings may make life more bearable
           ; for you:
           ("--" ["--"]) ("---" ["---"])
           ; Add more keybindings here.
           )))

   Another side note: In order to display Unicode characters you need
   to use a font which contains the glyphs in question. If such a font
   is not enabled by default (empty boxes are displayed instead of
   proper characters) you need to select another font. Do this by
   running
     M-x customize-face RET agda2-fontset-spec RET
   in Emacs (after you have started the Agda mode) and change the
   setting to a suitable font.

----------------------------------------------------------------
Appendix: Installation scripts for (at least) Ubuntu Linux

# A.1 Installing binary

  wget http://hackage.haskell.org/packages/archive/binary/0.3/binary-0.3.tar.gz
  tar -zxf binary-0.3.tar.gz
  cd binary-0.3
  runhaskell Setup.lhs configure
  runhaskell Setup.lhs build
  sudo runhaskell Setup.lhs install
  cd ..

# A.2 Installing zlib

  sudo apt-get install zlib1g-dev
  wget http://hackage.haskell.org/packages/archive/zlib/0.3/zlib-0.3.tar.gz
  tar -zxf zlib-0.3.tar.gz
  cd zlib-0.3
  runhaskell Setup.hs configure
  runhaskell Setup.hs build
  sudo runhaskell Setup.hs install
  cd ..

# A.3 Installing Agda

  runhaskell Setup.hs configure
  runhaskell Setup.hs build
  sudo runhaskell Setup.hs install
