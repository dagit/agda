To install Agda 2, under Windows with Cygwin, proceed as follows:

0) Install prerequisites (recent versions of GHC, Alex and Happy).

   darcs:  http://darcs.net/
   GHC:	   http://www.haskell.org/ghc/
   Alex:   http://www.haskell.org/alex/
   Happy:  http://www.haskell.org/happy/

   In addition to the libraries distributed with GHC you will need the
   `binary' and `zlib' packages which can be downloaded in the following way:

   Download

       http://hackage.haskell.org/cgi-bin/hackage-scripts/package/binary-0.3

   in some directory, change to that directory and do 

	runhaskell Setup.lhs configure
	runhaskell Setup.lhs build
	runhaskell Setup.lhs install
     
   Haskell zlib install procedure on windows
   
   1.    Installation of the zlib dll version
   
      1.1 Download "zlib compiled dll" from
          http://www.zlib.net/
   
      1.2 copy files to the ghc directory
          (replace c:/ghc/ghc-6.6.1 to wherever your version of ghc resides)
   
          cd zlib123-dll
          cp include/zlib.h c:/ghc/ghc-6.6.1/include/zlib.h
          cp include/zconf.h c:/ghc/ghc-6.6.1/include/zconf.h
          cp zlib1.dll c:/WINDOWS/SYSTEM/zlib1.dll
          cp zlib1.dll c:/ghc/ghc-6.6.1/zlib1.dll
          cp lib/zdll.lib   c:/ghc/ghc-6.6.1/libzdll.a
   
   2.    Installation of the Haskell zlib package
   
     2.1 Download from
      http://hackage.haskell.org/cgi-bin/hackage-scripts/package/zlib-0.3

     2.2 Edit zlib-0.3/zlib.cabal file.

      Change the two lines

        extra-libraries: z
        ghc-options: -O -fvia-C -Wall

      to

        extra-libraries: zlib1
        ghc-options: -O -fvia-C -Wall -lzdll

     2.3 Compile and install

      runhaskell Setup.hs configure
      runhaskell Setup.hs build
      runhaskell Setup.hs install


1) Download Agda 2, perhaps as follows:

     darcs get --partial http://www.cs.chalmers.se/~ulfn/darcs/Agda2
     cd Agda2

1.5) On Windows, edit Agda.cabal file to remove dependency on
     "readline".  To do so, open the file Agda.cabal with any
     text-editor, and edit the line that looks like

        build-depends:   base, mtl, QuickCheck >= 1.0 && < 2.0, readline, haskell98, haskell-src, binary >= 0.3

     to
        build-depends:   base, mtl, QuickCheck >= 1.0 && < 2.0, haskell98, haskell-src, binary >= 0.3

2) Build and install the Agda 2 library. If you want to install it in
   the default location (you may need root privileges for this), use
   the following commands:

     runhaskell Setup.hs configure
     runhaskell Setup.hs build
     runhaskell Setup.hs install

3) If you want to use the Emacs mode, build and install it (see
   below).

4) If you want to use the stand-alone "interpreter", build and install
   it:

     cd src/main
     runhaskell Setup.hs configure
     runhaskell Setup.hs build
     runhaskell Setup.hs install
     cd -

   Or:

     cd src/main
     runhaskell Setup.hs configure --prefix=<the install path>
     runhaskell Setup.hs build
     runhaskell Setup.hs install --user
     cd -

------------------------------------------------------------------------
To use the Agda 2 Emacs mode:

1. Install NTEmacs 22.

   Download from
       http://ntemacs.sourceforge.net/
   the self-extracting executable
       ntemacs22-bin-20070819.exe

   When executed, it asks where to extract itself.  This can be
   anywhere you like, but here we write the top directory for ntemacs as
       c:/pkg/ntemacs
   in the following.

   What follows is tested only on this version.  Other versions may
   work but you have to figure out yourself how to use Unicode fonts
   on your version.

2. Install ucs-fonts and mule-fonts for emacs.

   Download from
       http://www.cl.cam.ac.uk/~mgk25/ucs-fonts.html
   the tar file
       http://www.cl.cam.ac.uk/~mgk25/download/ucs-fonts.tar.gz
   Let us write the top directory of extracted files as
       c:/pkg/ucs-fonts 
   Next we create some derived fonts.
       cd c:/pkg/ucs-fonts/submission
       make all-bdfs
   This gives an error message about missing fonts, but ignore it.

   Download from
       http://www.meadowy.org/
   the tar file
       http://www.meadowy.org/meadow/dists/3.00/packages/mule-fonts-1.0-4-pkg.tar.bz2
   The untarred top directory is named "packages", but we are only
   interested in the subdirectory "packages/fonts".  Let us assume
   we moved this subdirectory to 
       c:/pkg/mule-fonts


   Add the following to your .emacs

;;;;;;;;; start of quoted elisp code

(setq bdf-directory-list
      '(
        "c:/pkg/ucs-fonts/submission"
        "c:/pkg/mule-fonts/intlfonts"
        "c:/pkg/mule-fonts/efonts"
        "c:/pkg/mule-fonts/bitmap"
        "c:/pkg/mule-fonts/CDAC"
        "c:/pkg/mule-fonts/AkrutiFreeFonts"
        ))
        
(setq w32-bdf-filename-alist
      (w32-find-bdf-fonts bdf-directory-list))

(create-fontset-from-fontset-spec
    "-*-fixed-Medium-r-Normal-*-15-*-*-*-c-*-fontset-bdf,
    ascii:-Misc-Fixed-Medium-R-Normal--15-140-75-75-C-90-ISO8859-1,
    latin-iso8859-2:-*-Fixed-*-r-*-*-15-*-*-*-c-*-iso8859-2,
    latin-iso8859-3:-*-Fixed-*-r-*-*-15-*-*-*-c-*-iso8859-3,
    latin-iso8859-4:-*-Fixed-*-r-*-*-15-*-*-*-c-*-iso8859-4,
    cyrillic-iso8859-5:-*-Fixed-*-r-*-*-15-*-*-*-c-*-iso8859-5,
    greek-iso8859-7:-*-Fixed-*-r-*-*-15-*-*-*-c-*-iso8859-7,
    latin-iso8859-9:-*-Fixed-*-r-*-*-15-*-*-*-c-*-iso8859-9,
    mule-unicode-0100-24ff:-Misc-Fixed-Medium-R-Normal--15-140-75-75-C-90-ISO10646-1,
    mule-unicode-2500-33ff:-Misc-Fixed-Medium-R-Normal--15-140-75-75-C-90-ISO10646-1,
    mule-unicode-e000-ffff:-Misc-Fixed-Medium-R-Normal--15-140-75-75-C-90-ISO10646-1,
    japanese-jisx0208:-JIS-Fixed-Medium-R-Normal--16-150-75-75-C-160-JISX0208.1983-0,
    japanese-jisx0208-1978:-Misc-Fixed-Medium-R-Normal--16-150-75-75-C-160-JISC6226.1978-0,
    japanese-jisx0212:-Misc-Fixed-Medium-R-Normal--16-150-75-75-C-160-JISX0212.1990-0,
    latin-jisx0201:-*-*-medium-r-normal-*-16-*-*-*-c-*-jisx0201*-*,
    katakana-jisx0201:-Sony-Fixed-Medium-R-Normal--16-120-100-100-C-80-JISX0201.1976-0,
    thai-tis620:-Misc-Fixed-Medium-R-Normal--24-240-72-72-C-120-TIS620.2529-1,
    lao:-Misc-Fixed-Medium-R-Normal--24-240-72-72-C-120-MuleLao-1,
    tibetan:-TibMdXA-fixed-medium-r-normal--16-160-72-72-m-160-MuleTibetan-0,
    tibetan-1-column:-TibMdXA-fixed-medium-r-normal--16-160-72-72-m-80-MuleTibetan-1,
    korean-ksc5601:-Daewoo-Mincho-Medium-R-Normal--16-120-100-100-C-160-KSC5601.1987-0,
    chinese-gb2312:-ISAS-Fangsong ti-Medium-R-Normal--16-160-72-72-c-160-GB2312.1980-0,
    chinese-cns11643-1:-HKU-Fixed-Medium-R-Normal--16-160-72-72-C-160-CNS11643.1992.1-0,
    chinese-big5-1:-ETen-Fixed-Medium-R-Normal--16-150-75-75-C-160-Big5.ETen-0,
    chinese-big5-2:-ETen-Fixed-Medium-R-Normal--16-150-75-75-C-160-Big5.ETen-0
    " t)

(setq font-encoding-alist
      (append '(
                ("JISX0208" (japanese-jisx0208 . 0))
                ("JISX0212" (japanese-jisx0212 . 0))
                ("CNS11643.1992.1-0" (chinese-cns11643-1 . 0))
                ("GB2312" (chinese-gb2312 . 0))
                ("KSC5601" (korean-ksc5601 . 0))
                ("VISCII" (vietnamese-viscii-lower . 0))
                ("MuleArabic-0" (arabic-digit . 0))
                ("MuleArabic-1" (arabic-1-column . 0))
                ("MuleArabic-2" (arabic-2-column . 0))
                ("muleindian-1" (indian-1-column . 0))
                ("muleindian-2" (indian-2-column . 0))
                ("MuleTibetan-0" (tibetan . 0))
                ("MuleTibetan-1" (tibetan-1-column . 0))
                ) font-encoding-alist))

;;;;;;; end of quoted elisp code

   To test the fonts, try

       M-x eval-expression RET
       (set-default-font "fontset-bdf") RET
       M-x view-hello-file

   You should see all the characters without white-boxes.


3. Install haskell-mode, version 2.1 or later.

   Download via 
       http://haskell.org/haskell-mode/
   the tar file
       http://www.iro.umontreal.ca/~monnier/elisp/haskell-mode.tar.gz
   Let us write the untarred top directory
       c:/pkg/haskell-mode-2.3


   Add the following line to your .emacs

       (load "c:/pkg/haskell-mode-2.3/haskell-site-file")

   To test it, open a file with the name "foo.hs", write some haskell,
   and do
       M-x inferior-haskell-load-file

4. Install Agda 2. (See above.)
   Let us write
       c:/pkg/Agda2
   for the top directory of Agda2.

5. Add the following to your .emacs

   (add-to-list 'load-path "c:/pkg/Agda2/src/full/Interaction/emacs-mode")
   (autoload 'agda2-mode "agda2-mode" "Agda2 mode." t)
   (add-to-list 'auto-mode-alist '("\\.l?agda$" . agda2-mode))

   If you have already set up the suffix .agda for use with some other
   mode you may need to remove or alter that setting. You are
   encouraged to use the suffix .alfa for Agda 1 files.

  Now, if you open a file named XXX.agda the buffer will use
  agda2-mode. It may take 5 or 10 seconds before you see anything in
  the buffer, but that is normal.

6. If you want to you can customize some settings. Just start Emacs
   and type the following:

   M-x load-library RET agda2-mode RET
   M-x customize-group RET agda2 RET

   This is useful if you want to change the Agda search path, in which
   case you should change the agda2-include-dirs variable.
